<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>css初级笔记（二）</title>
      <link href="/posts/css%E5%88%9D%E7%BA%A7%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/posts/css%E5%88%9D%E7%BA%A7%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="文档流（normal-flow）"><a href="#文档流（normal-flow）" class="headerlink" title="文档流（normal flow）"></a>文档流（normal flow）</h1><p>网页实际是一个多层的结构，一层摞着一层，开发人员通过css来分别为每一层设置样式，而作为用户来讲只能看到最顶上一层。在这些层中，最底下的一层称为文档流，文档流是网页的基础，我们所创建的元素默认都是在文档流中进行排列。所以对于我们来说元素主要有两种状态：在文档流中和不在文档流中（<mark class="hl-label red">脱离文档流</mark> ）。</p><p>元素在文档流中的特点：</p><ul><li><strong>块元素</strong><ul><li>块元素会在页面中独占一行(自上向下垂直排列)</li><li>默认宽度是父元素的全部（会把父元素撑满）</li><li>默认高度是被内容撑开（子元素）</li></ul></li><li><strong>行内元素</strong><ul><li>行内元素不会独占页面的一行，只占自身的大小</li><li>行内元素在页面中自左向右水平排列，如果一行中不能容纳下所有的行内元素，则元素会换到第二行继续自左向右排列（与书写习惯一致）</li><li>行内元素的默认宽度和高度都是被内容撑开</li></ul></li></ul><hr><h1 id="盒模型（box-model）"><a href="#盒模型（box-model）" class="headerlink" title="盒模型（box model）"></a>盒模型（box model）</h1><p>​CSS将页面中的所有元素都设置为了一个矩形的盒子，将元素设置为矩形的盒子后，对页面的布局就变成将不同的盒子摆放到不同的位置，每一个盒子都由以下几个部分组成：内容区（content）、内边距（padding）、边框（border）、外边距（margin）。</p><img src="/posts/css%E5%88%9D%E7%BA%A7%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/box-model.png" class="" title="盒模型"><h2 id="内容区（content）"><a href="#内容区（content）" class="headerlink" title="内容区（content）"></a>内容区（content）</h2><ul><li>元素中所有的子元素和文本内容都在内容区中排列  </li><li>内容区的大小由width 和 height两个属性来设置</li><li>width 设置内容区的宽度，height 设置内容区的高度</li></ul><h2 id="边框（border）"><a href="#边框（border）" class="headerlink" title="边框（border）"></a>边框（border）</h2><ul><li><p>边框属于盒子边缘，边框里边属于盒子内部，出了边框则属于盒子的外部</p></li><li><mark class="hl-label blue">边框的大小会影响到整个盒子的大小</mark> </li><li><p>要设置边框，需要至少设置三个样式：边框的宽度（border-width）、边框的颜色（border-color）、边框的样式 （border-style）。</p><ul><li>这三种样式都可以用来指定四个方向的边框</li></ul><p>​       值的情况</p><p>​            四个值：上 右 下 左(顺时针)</p><p>​            三个值：上 左右 下</p><p>​            两个值：上下 左右</p><p>​            一个值：上下左右</p><ul><li>当然一般我们也不会这么蛋疼，都是四个方向统一设置，故可以通过简写属性同时设置边框的所有相关样式，且没有顺序要求。</li><li>eg：border: 10px red solid;</li></ul></li></ul><h2 id="内边距（padding）"><a href="#内边距（padding）" class="headerlink" title="内边距（padding）"></a>内边距（padding）</h2><ul><li>内容区和边框之间的距离是内边距</li><li>一共有四个方向的内边距：padding-top、padding-right、padding-bottom、padding-left</li><li>padding 内边距的简写属性，可以同时指定四个方向的内边距，规则和border-width 一样</li><li><mark class="hl-label blue">内边距的设置会影响到盒子的大小</mark> </li><li>内容区的背景颜色会延伸到内边距上</li></ul><div class="note info flat"><p>一个盒子可见框的大小，由内容区、内边距和边框共同决定，所以在计算盒子大小时，需要将这三个区域加到一起计算。</p></div><h2 id="外边距（margin）"><a href="#外边距（margin）" class="headerlink" title="外边距（margin）"></a>外边距（margin）</h2><ul><li><mark class="hl-label blue">外边距不会影响盒子可见框的大小</mark> ，但是会影响盒子的位置</li><li>一共有四个方向的外边距：margin-top、margin-right、margin-bottom、margin-left</li><li>margin的简写属性， 可以同时设置四个方向的外边距 ，用法和padding一样</li><li>元素在页面中是按照自左向右的顺序排列的，所以默认情况下如果我们设置的左和上外边距则会移动元素自身，而设置下和右外边距会移动其他元素。</li></ul><div class="note info flat"><p>默认情况下设置margin-right不会产生任何效果(默认情况它总是被浏览器所修改的值)，此处涉及盒子的水平布局，如果不理解可以先跳过，等看完下一节内容再来回看。</p></div><h2 id="盒子尺寸"><a href="#盒子尺寸" class="headerlink" title="盒子尺寸"></a>盒子尺寸</h2><p>默认情况下，盒子可见框的大小由内容区、内边距和边框共同决定，我们可以使用box-sizing 来设置盒子尺寸的计算方式（设置width和height的作用）</p><ul><li>content-box 默认值，宽度和高度用来设置内容区的大小</li><li>border-box 宽度和高度用来设置整个盒子可见框的大小<ul><li>width和 height指的是内容区、内边距和边框的总大小</li></ul></li></ul><h2 id="行内元素的盒模型"><a href="#行内元素的盒模型" class="headerlink" title="行内元素的盒模型"></a>行内元素的盒模型</h2><p>1.<strong>特点</strong>：</p><ul><li><p>行内元素不支持设置宽度和高度</p></li><li><p>行内元素可以设置padding，但是垂直方向padding不会影响页面的布局</p></li><li><p>行内元素可以设置border，垂直方向的border不会影响页面的布局</p></li><li><p>行内元素可以设置margin，垂直方向的margin不会影响布局</p></li></ul><p>2.我们可以使用<strong>disply属性</strong>来设置元素显示的类型（display: block;）</p><ul><li>inline 将元素设置为行内元素</li><li>block 将元素设置为块元素</li><li>inline-block 将元素设置为行内块元素 （既可以设置宽度和高度又不会独占一行）</li><li>table 将元素设置为一个表格</li><li>none 元素不在页面中显示</li></ul><p>3.我们还可以使用<strong>visibility</strong>来设置元素的显示状态（visibility: hidden;）</p><ul><li>visible 默认值，元素在页面中正常显示</li><li>hidden 元素在页面中隐藏不显示，但是依然占据页面的位置</li></ul><hr><h1 id="盒子的水平布局"><a href="#盒子的水平布局" class="headerlink" title="盒子的水平布局"></a>盒子的水平布局</h1><p><strong>元素在其父元素中水平方向的位置由以下几个属性共同决定（自左向右）：</strong></p><p>margin-left、border-left、padding-left、width、padding-right、border-right、margin-right</p><p><strong>一个元素在其父元素中，水平布局必须要满足以下的等式：</strong></p><p>margin-left + border-left + padding-left + width + padding-right + border-right + margin-right &#x3D; 其父元素内容区的宽度</p><p>以上等式必须满足，如果相加结果使等式不成立，则称为过度约束，等式会自动调整</p><p>1.调整的情况：</p><ul><li>如果这七个值中没有为 auto 的情况，则浏览器会自动调整margin-right值以使等式满足。</li><li>这七个值中有三个值可以设置为auto：width、margin-left、margin-right，若其中某个值为auto，则等式会调整其值来使等式成立。</li></ul><p>2.举例说明</p><ul><li>设置width为200px，父元素width为800px: 0 + 0 + 0 + 200 + 0 + 0 + 0 &#x3D; 800<ul><li>则会自动调整margin-right：0 + 0 + 0 + 200 + 0 + 0 + 600 &#x3D; 800</li></ul></li><li>初始设置：100 + 0 + 0 + 200 + 0 + 0 + 400 &#x3D; 800<ul><li>则会自动调整margin-right：100 + 0 + 0 + 200 + 0 + 0 + 500 &#x3D; 800</li></ul></li><li>初始设置：0 + 0 + 0 + auto + 0 + 0 + 0 &#x3D; 800  ；则自动调整auto &#x3D; 800（width）</li><li>初始设置：auto + 0 + 0 + 200 + 0 + 0 + auto &#x3D; 800   ；则自动调整auto &#x3D; 300（margin-left、margin-right）</li></ul><p>3.多个auto自动调整说明</p><ul><li>如果宽度和其他属性设置为auto，则自动调整宽度，其他属性置为0。</li><li>如果将两个外边距设置为auto，宽度固定值，则会将两外边距设置为相同值。</li></ul><div class="note info flat"><p>我们经常利用这个特点来使一个元素在其父元素中水平居中：</p><p>width:xxxpx;</p><p>margin:0 auto;</p></div><h1 id="垂直方向的布局"><a href="#垂直方向的布局" class="headerlink" title="垂直方向的布局"></a>垂直方向的布局</h1><p> 默认情况下父元素的高度被内容撑开，子元素是在父元素的内容区中排列的，如果子元素的大小超过了父元素，则子元素会从父元素中溢出，我们使用 overflow 属性来设置父元素如何处理溢出的子元素。</p><mark class="hl-label green">overflow:auto</mark> <ul><li>visible，(默认值 )子元素会从父元素中溢出，在父元素外部的位置显示</li><li>hidden 溢出内容将会被裁剪不会显示</li><li>scroll 生成两个滚动条，通过滚动条来查看完整的内容</li><li>auto 根据需要生成滚动条</li></ul><h2 id="垂直外边距的重叠（折叠）"><a href="#垂直外边距的重叠（折叠）" class="headerlink" title="垂直外边距的重叠（折叠）"></a>垂直外边距的重叠（折叠）</h2><p>相邻的垂直方向外边距会发生重叠现象</p><ol><li><p>兄弟元素</p><ul><li><p>兄弟元素间的相邻垂直外边距会取两者之间的较大值（两者都是正值）</p></li><li><p>特殊情况：如果相邻的外边距一正一负，则取两者的和；</p><p>​如果相邻的外边距都是负值，则取两者中绝对值较大的。</p></li><li><p>兄弟元素之间的外边距的重叠，对于开发是有利的，所以我们不需要进行处理。</p></li></ul></li><li><p>父子元素</p><ul><li>父子元素间相邻外边距，子元素的会传递给父元素（上外边距），连带着父元素一起移动。</li><li>父子外边距的折叠会影响到页面的布局，必须要进行处理</li><li>解决方式：要么不用外边距，要么不相邻</li></ul></li></ol><h1 id="一些其他的样式"><a href="#一些其他的样式" class="headerlink" title="一些其他的样式"></a>一些其他的样式</h1><h2 id="默认样式"><a href="#默认样式" class="headerlink" title="默认样式"></a>默认样式</h2><p>通常情况，浏览器都会为元素设置一些默认样式，这些样式的存在会影响到页面的布局，一般我们编写网页时必须要去除浏览器的默认样式（PC端的页面）</p><p>重置样式表：专门用来对浏览器的样式进行重置的</p><ul><li><p>reset.css 直接去除了浏览器的默认样式</p></li><li><p>normalize.css 对默认样式进行了统一</p></li></ul><p><a href="https://pan.baidu.com/s/1nBGai3NUw4--z_fkdbUA0w">获取重置样式表文件 </a>提取码: 7aev</p><h2 id="轮廓、圆角和阴影"><a href="#轮廓、圆角和阴影" class="headerlink" title="轮廓、圆角和阴影"></a>轮廓、圆角和阴影</h2><div class="tabs" id="css"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#css-1">轮廓</button></li><li class="tab"><button type="button" data-href="#css-2">圆角</button></li><li class="tab"><button type="button" data-href="#css-3">阴影</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="css-1"><p>outline 用来设置元素的轮廓线，用法和border一模一样</p><ul><li>轮廓和边框不同的点，就是轮廓不会影响到可见框的大小</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="css-2"><p>border-radius: 用来设置圆角 （圆角设置的圆的半径大小）</p><ul><li>border-radius 可以分别指定四个角的圆角</li></ul><p>​          四个值： 左上 右上 右下 左下</p><p>​          三个值： 左上 右上&#x2F;左下 右下 </p><p>​          两个值： 左上&#x2F;右下 右上&#x2F;左下</p><p>​  border-radius: 20px 50%;<img src="/posts/css%E5%88%9D%E7%BA%A7%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/yuanjiao.png" class="" title="圆角"></p><ul><li>将元素设置为一个圆形：border-radius: 50%;</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="css-3"><p>box-shadow 用来设置元素的阴影效果，阴影不会影响页面布局</p><ul><li>第一个值 水平偏移量 设置阴影的水平位置 正值向右移动 负值向左移动</li><li>第二个值 垂直偏移量 设置阴影的水平位置 正值向下移动 负值向上移动</li><li>第三个值 阴影的模糊半径</li><li>第四个值 阴影的颜色</li></ul><p>box-shadow: 0px 0px 50px rgba(0, 0, 0, .3) ; <img src="/posts/css%E5%88%9D%E7%BA%A7%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/shadow.png" class="" title="阴影"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 前端学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css初级笔记（一）</title>
      <link href="/posts/css%E5%88%9D%E7%BA%A7%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/posts/css%E5%88%9D%E7%BA%A7%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>实践中优先外部样式表、平时练习可以使用内部样式表<code>&lt;style&gt;&lt;/style&gt;</code> </p></div><hr><h1 id="语法组成："><a href="#语法组成：" class="headerlink" title="语法组成："></a>语法组成：</h1><p>css的基本语法分为两部分：选择器和声明块。</p><ul><li><strong>选择器</strong>：通过选择器可以选中页面中的指定元素，比如 p 的作用就是选中页面中所有的p元素</li><li><strong>声明块</strong>：通过声明块来指定要为元素设置的样式<ul><li>声明块由一个一个的声明组成</li><li>声明是一个名值对结构，一个样式名对应一个样式值，名和值之间以:连接，以;结尾</li></ul></li></ul><hr><h1 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h1><h2 id="常用选择器"><a href="#常用选择器" class="headerlink" title="常用选择器"></a>常用选择器</h2><ul><li><strong>元素（标签）选择器</strong><ul><li>作用：根据标签名来选中指定的元素</li><li>语法：标签名{}</li><li>例子：p{}、h1{}、div{}</li></ul></li><li><strong>id选择器</strong><ul><li>作用：根据元素的id属性值选中一个元素</li><li>语法：#id属性值{}</li><li>例子：#box{}   #red{}</li></ul></li><li><strong>类选择器</strong><ul><li>作用：根据元素的class属性值选中一组元素</li><li>语法：.class属性值</li><li>例子：.abc{}  .circle{}</li></ul></li><li><strong>通配选择器</strong><ul><li>作用：选中页面中的所有元素</li><li>语法: *</li></ul></li></ul><h2 id="复合选择器"><a href="#复合选择器" class="headerlink" title="复合选择器"></a>复合选择器</h2><ul><li><p><strong>交集选择器</strong></p><ul><li>作用：选中同时符合多个条件的元素</li><li>语法：选择器1选择器2选择器3选择器n{}</li></ul><div class="note warning flat"><p>注意：交集选择器中如果有元素选择器，必须使用元素选择器开头  </p></div></li><li><p><strong>选择器分组（并集选择器）</strong></p><ul><li>作用：同时选择多个选择器对应的元素</li><li>语法：选择器1,选择器2,选择器3,选择器n{}</li><li>例子：#b1,.p1,h1,span,div.red{}</li></ul></li></ul><h2 id="关系选择器"><a href="#关系选择器" class="headerlink" title="关系选择器"></a>关系选择器</h2><ul><li><p><strong>子元素选择器</strong></p><ul><li>作用：选中指定父元素的指定子元素</li><li>语法：父元素 &gt; 子元素</li><li>例子：div.box &gt; span</li></ul></li><li><p><strong>后代元素选择器</strong></p><ul><li>作用：选中指定元素内的指定后代元素</li><li>语法：祖先  后代</li><li>例子：div span</li></ul></li><li><p><strong>兄弟元素选择器</strong></p><ul><li><p>选择后一个兄弟元素：前一个 + 下一个</p><p>p + span</p></li><li><p>选择后边所有的兄弟元素：兄 ~ 弟</p><p>p ~ span</p></li></ul></li></ul><h2 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h2><ul><li><p>语法：      [属性名] 选择含有指定属性的元素</p><p>​      [属性名&#x3D;属性值] 选择含有指定属性和属性值的元素</p><p>​      [属性名^&#x3D;属性值] 选择属性值以指定值开头的元素</p><p>​      [属性名$&#x3D;属性值] 选择属性值以指定值结尾的元素</p><p>​      [属性名*&#x3D;属性值] 选择属性值中含有某值的元素的元素</p></li><li><p>对应示例：  p[title]</p><p>​     p[title&#x3D;abc]</p><p>​     p[title^&#x3D;abc]</p><p>​     p[title$&#x3D;abc]</p><p>​ p[title^&#x3D;abc]</p></li></ul><h2 id="伪类"><a href="#伪类" class="headerlink" title="伪类"></a>伪类</h2><ul><li><p>伪类用来描述一个元素的<mark class="hl-label red">特殊状态</mark> ，比如：第一个子元素、被点击的元素、鼠标移入的元素。。。</p></li><li><p>一般情况伪类下都是使用 : 开头</p><ul><li>:first-child第一个子元素</li><li>:last-child     最后一个子元素</li><li>:nth-child()   选中第n个子元素(参数为2n或者even时表示选中偶数位的元素；参数为2n+1或者odd时表示选中奇数位的元素)</li></ul><div class="note info flat"><p>以上这些伪类都是根据所有的子元素进行排序</p></div><ul><li>:first-of-type、:last-of-type、:nth-of-type()</li></ul><div class="note info flat"><p>这几个伪类的功能和上述的类似，不同点是他们是在同类型元素中进行排序</p></div><ul><li>:not()    否定伪类，将符合条件的元素从选择器中去除</li><li><strong>a元素的伪类</strong><ul><li>:link 用来表示没访问过的链接（正常的链接）</li><li>:visited 用来表示访问过的链接</li><li>:hover 用来表示鼠标移入的状态</li><li>:active 用来表示鼠标点击的状态</li></ul></li></ul></li></ul><h2 id="伪元素选择器"><a href="#伪元素选择器" class="headerlink" title="伪元素选择器"></a>伪元素选择器</h2><ul><li><p>伪元素用来表示页面中一些特殊的并不真实存在的元素（即<mark class="hl-label red">特殊的位置</mark> ）</p></li><li><p>伪元素一般使用 :: 开头</p><ul><li>::first-letter 表示第一个字母</li><li>::first-line 表示第一行</li><li>::selection 表示选中的内容</li><li>::before 元素的开始</li><li>::after 元素的最后</li></ul><div class="note info flat"><p>before 和 after 必须结合content属性来使用</p></div></li><li><p>更多伪类&#x2F;元素的用法请参考(<a href="https://www.w3cschool.cn/cssref/53s812dp.html">CSS 选择器</a>)</p></li></ul><h2 id="选择器的权重"><a href="#选择器的权重" class="headerlink" title="选择器的权重"></a>选择器的权重</h2><p>当我们通过不同的选择器，选中相同的元素，并且为相同的样式设置不同的值时，此时就发生了样式的冲突。当发生样式冲突时，应用哪个样式则由选择器的权重（优先级）所决定。</p><p><strong>选择器的权重</strong></p><table><thead><tr><th align="left">选择器</th><th>优先级</th></tr></thead><tbody><tr><td align="left">内联样式（直接将css代码放在标签内）</td><td>1,0,0,0</td></tr><tr><td align="left">id选择器</td><td>0,1,0,0</td></tr><tr><td align="left">类和伪类选择器</td><td>0,0,1,0</td></tr><tr><td align="left">元素选择器</td><td>0,0,0,1</td></tr><tr><td align="left">通配选择器</td><td>0,0,0,0</td></tr><tr><td align="left">继承的样式</td><td>没有优先级</td></tr></tbody></table><ul><li>比较优先级时，需要将所有选择器的优先级进行相加计算，最后优先级越高，则越优先显示（分组选择器是单独计算的），选择器的累加不会超过其最大的数量级，类选择器再高也不会超过id选择器，如果优先级计算后相同，此时则优先使用靠下的样式。</li><li>可以在某一个样式的后边添加 !important ，则此时该样式会获取到最高的优先级，甚至超过内联样式，但是实际开发中不建议使用。</li></ul><hr><h1 id="声明块"><a href="#声明块" class="headerlink" title="声明块"></a>声明块</h1><h2 id="样式的继承"><a href="#样式的继承" class="headerlink" title="样式的继承"></a>样式的继承</h2><p>我们在为一个元素设置样式时同时也会应用到它的后代元素上。</p><ul><li>继承是发生在祖先和后代之间的</li><li>继承的设计是为了方便我们的开发，利用继承我们可以将一些通用的样式统一设置到共同的祖先元素上，这样只需设置一次即可让所有的元素都具有该样式。</li></ul><div class="note warning flat"><p>并不是所有的样式都会被继承，比如背景相关的，布局相关等的这些样式都不会被继承。具体哪些样式会被继承请查阅css手册内容</p></div><h2 id="长度单位"><a href="#长度单位" class="headerlink" title="长度单位"></a>长度单位</h2><ul><li><strong>像素</strong>：屏幕（显示器）实际上是由一个一个的小方块构成的，不同屏幕的像素大小不同，像素越小的屏幕显示的效果越清晰。 所以同样的200px在不同的设备下显示效果并不相同。</li><li><strong>百分比</strong>：可以将属性值设置为相对于其父元素属性的百分比，这样可以使子元素跟随父元素的改变而改变。</li><li><strong>em</strong>：em是相对于元素的字体大小来计算的，1em &#x3D; 1font-size（默认为16）；em会根据字体大小的改变而改变</li><li><strong>rem</strong>：rem是相对于根元素(html)的字体大小来计算。（在进行手机端开发时常用）</li></ul><h2 id="颜色单位"><a href="#颜色单位" class="headerlink" title="颜色单位"></a>颜色单位</h2><ul><li><strong>颜色名</strong>：在CSS中可以直接使用颜色名来设置各种颜色，比如：red、orange、yellow、blue、green … …，但是这种方式不太方便，也不太灵活。</li><li><strong>RGB值</strong>：RGB通过三种颜色的不同浓度来调配出不同的颜色，每一种颜色的范围在 0 - 255 (0% - 100%) 之间；语法：RGB(红色,绿色,蓝色)</li><li><strong>RGBA</strong>：在rgb的基础上增加了一个a表示不透明度，1表示完全不透明  0表示完全透明  .5半透明。</li><li><strong>十六进制的RGB值</strong>：颜色浓度通过 00-ff表示，语法：#红色绿色蓝色</li></ul><div class="note info flat"><p>如果颜色两位两位重复可以进行简写，eg：#aabbcc –&gt; #abc</p></div><ul><li>HSL值 HSLA值（不常用）<ul><li>H 色相(0 - 360)（圆环)</li><li>S 饱和度，颜色的浓度 0% - 100%</li><li>L 亮度，颜色的亮度 0% - 100%</li></ul></li></ul><div class="note info flat"><p>碍于文章篇幅，这里声明块只列了几种，其实自选择器往下，包括后续的所有内容都属于声明块，即对选择到的页面元素的样式进行修改。</p></div>]]></content>
      
      
      <categories>
          
          <category> 前端学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html初级笔记</title>
      <link href="/posts/html%E5%88%9D%E7%BA%A7%E7%AC%94%E8%AE%B0/"/>
      <url>/posts/html%E5%88%9D%E7%BA%A7%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="1-前置知识："><a href="#1-前置知识：" class="headerlink" title="1.前置知识："></a>1.前置知识：</h1><h2 id="网页结构："><a href="#网页结构：" class="headerlink" title="网页结构："></a>网页结构：</h2><ul><li><p>结构-HTML</p></li><li><p>表现-CSS</p></li><li><p>行为-JavaScript</p></li></ul><h2 id="HTML页面的基本结构："><a href="#HTML页面的基本结构：" class="headerlink" title="HTML页面的基本结构："></a>HTML页面的基本结构：</h2><p>​文档声明、标签、属性、注释</p><hr><h1 id="2-HTML："><a href="#2-HTML：" class="headerlink" title="2.HTML："></a>2.HTML：</h1><h2 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h2><p>​    在HTML中有些时候，我们不能直接书写一些特殊符号。比如：多个连续的空格，比如字母两侧的大于和小于号。如果我们需要在网页中书写这些特殊的符号，则需要使用html中的实体（转义字符）。</p><p><strong>实体的语法</strong>：&amp;实体的名字;</p><ul><li>&amp;nbsp; 空格</li><li>&amp;gt; 大于号</li><li>&amp;lt; 小于号</li><li>&amp;copy; 版权符号</li></ul><h2 id="meta标签"><a href="#meta标签" class="headerlink" title="meta标签:"></a>meta标签:</h2><p>用于设置网页中的一些元数据，展示给浏览器看的内容。</p><ul><li><p>charset 指定网页的字符集<code>&lt;meta charset=&quot;UTF-8&quot;&gt;</code></p></li><li><p>name 指定的数据的名称、content 指定的数据的内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;Keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;网上购物,网上商城&quot;</span>/&gt;</span> </span><br><span class="line"><span class="comment">&lt;!--网页关键字，作为搜索引擎搜索时依据的关键词 --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;京东JD.COM-专业的综合网上购物商城&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--网站的描述,作为搜索结果的相关描述，会显示在搜索引擎的搜索的结果中 --&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>title 网站被搜索引擎检索时的标题 <code>&lt;title&gt;Document&lt;/title&gt;</code></p></li></ul><h2 id="语义化标签"><a href="#语义化标签" class="headerlink" title="语义化标签:"></a>语义化标签:</h2><ul><li><strong>块元素</strong>：h1~h6、p</li><li><strong>行内元素</strong>：em、q(短引用)、blockquote（长引用）、a（超链接）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">         <span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">main</span>&gt;</span><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">nav</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">aside</span>&gt;</span><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">article</span>&gt;</span><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">section</span>&gt;</span><span class="tag">&lt;/<span class="name">section</span>&gt;</span>（不常用：兼容性一般）</span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>(常用)  </span><br></pre></td></tr></table></figure><ul><li><p>列表：</p><ul><li><p>ul&gt;li 无序</p></li><li><p>ol&gt;li 有序</p></li><li><p>dl&gt;dt 定义列表</p></li></ul></li><li><p>超链接：</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;.html or url&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>（新页面）&gt;</span>超链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">     href=&quot;#(顶端)、#(id)跳转到指定地方&quot;            </span><br></pre></td></tr></table></figure><ul><li><p>图片标签</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/1.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;松鼠&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>src: 图片路径</p></li><li><p>alt：图片的描述，默认情况下不会显示，有些浏览器会在图片无法加载时显示<br>          搜索引擎会根据alt中的内容来识别图片，如果不写alt属性则图片不会被搜索引擎所收录</p></li><li><p>图片的格式：jpg、gif、png、webp、base64 。效果一样，用小的；效果不一样，用效果好的。</p></li></ul></li><li><p>内联框架</p><p>   用于向当前页面中引入一个其他页面</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://www.qq.com&quot;</span> <span class="attr">width</span>=<span class="string">&quot;800&quot;</span> <span class="attr">height</span>=<span class="string">&quot;600&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>src : 指定要引入的网页的路径</li><li>frameborder : 指定内联框架的边框</li></ul></li><li><p>音视频<br>   用来向页面中引入一个外部的音频文件的<br>   <strong>属性</strong>：</p><ul><li>controls 是否允许用户控制播放<ul><li>autoplay 音频文件是否自动播放<ul><li>如果设置了autoplay ,则音乐在打开页面时会自动播放</li><li>但是目前来讲大部分浏览器都不会自动对音乐进行播放</li></ul></li></ul></li><li>loop 音乐是否循环播放    <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 对不起，您的浏览器不支持播放音频！请升级浏览器！ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;./source/audio.mp3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;./source/audio.ogg&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 老版本支持的标签 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">&quot;./source/audio.mp3&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/mp3&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>表格：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span><span class="comment">&lt;!-- 头部 --&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="comment">&lt;!-- 在table中使用tr表示表格中的一行，有几个tr就有几行 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="comment">&lt;!-- 主体 --&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="comment">&lt;!-- 在tr中使用td表示一个单元格，有几个td就有几个单元格 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span><span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span><span class="comment">&lt;!-- 底部 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p><code>&lt;td rowspan=&quot;2&quot;&gt;&lt;/td&gt;</code>:纵向合并单元格</p></li><li><p><code>&lt;td colspan=&quot;2&quot;&gt;&lt;/td&gt;</code>:横向合并单元格</p></li><li><p>border-spacing: 指定边框之间的距离（css样式）</p></li><li><p>border-collapse: collapse; 设置边框的合并（css样式）</p></li><li><p>tr不是table的子元素</p></li><li><p>默认情况下元素在td中是垂直居中的，table的单元格内元素垂直居中可以利用vertical-align 来设置。</p></li></ul></li><li><p>表单：</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;target.html&quot;</span>&gt;</span> <span class="comment">&lt;!-- action 表单要提交的服务器的地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span>文本框 </span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>密码框 </span><br><span class="line">    注意：文本框和密码框必须指定name属性</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">value</span>=<span class="string">&quot;a&quot;</span>&gt;</span>单选按钮 </span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;test&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>多选框 </span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;haha&quot;</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;i&quot;</span>&gt;</span>选项一<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span> <span class="attr">value</span>=<span class="string">&quot;ii&quot;</span>&gt;</span>选项二<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    选择框必须指定name和value值才能向服务器传入数据</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">   input属性：</span><br><span class="line">        autocomplete=&quot;off&quot; 关闭自动补全</span><br><span class="line">        readonly 将表单项设置为只读，数据会提交</span><br><span class="line">        disabled 将表单项设置为禁用，数据不会提交</span><br><span class="line">        autofocus 设置表单项自动获取焦点</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>​     </p><p>​     </p>]]></content>
      
      
      <categories>
          
          <category> 前端学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
